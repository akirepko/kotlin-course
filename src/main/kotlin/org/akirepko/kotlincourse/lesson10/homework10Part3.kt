package org.example.org.akirepko.kotlincourse.lesson10

fun main() {
//    Задание 1: Создание Пустого Множества
//    Создайте пустое неизменяемое множество целых чисел.
    val setnum = setOf<Int>()

//    Задание 2: Создание и Инициализация Множества
//    Создайте неизменяемое множество целых чисел,
//    содержащее три различных элемента (например, 1, 2, 3).
    val mySetInt = setOf(1, 2, 3)
//    Задание 3: Создание Изменяемого Множества
//    Создайте изменяемое множество строк и
//    инициализируйте его несколькими значениями
//    (например, "Kotlin", "Java", "Scala").
    val mySetString = mutableSetOf("Kotlin", "Java", "Scala")
//    Задание 4: Добавление Элементов в Множество
//    Имея изменяемое множество строк,
//    добавьте в него новые элементы (например, "Swift", "Go")
    mySetString.add("Swift")
    mySetString.add("Go")
//    Задание 5: Удаление Элементов из Множества
//    Имея изменяемое множество целых чисел,
//    удалите из него определенный элемент (например, 2).

    val myNewSetInt = mutableSetOf(1, 2, 3, 4, 5)
    myNewSetInt.remove(2)
//    Задание 6: Перебор Множества в Цикле
//    Создайте множество целых чисел и используйте цикл для вывода каждого элемента на экран.
    for (i in mySetInt){
        println(i)
    }
//    Задание 7: Проверка Наличия Элемента в Множестве
//    Создай функцию, которая принимает множество строк (set) и строку и проверяет,
//    есть ли в множестве указанная строка. Нужно вернуть булево значение true если строка есть./
//    Реши задачу через цикл.
//    Задание 8: Объединение Двух Множеств
//    Создайте два множества строк и объедините их в одно новое множество,
//    содержащее все уникальные элементы обоих множеств. Реши задачу с помощью циклов.
    val oneSet=setOf("sd","sdsf","ssdasd","4")
    val twoSet= setOf("3","5","6")
    val threeSet= mutableSetOf<String>()
    for (i in oneSet){
        threeSet.add(i)
    }
    for (i in twoSet){
        threeSet.add(i)
    }
    println(threeSet)

//    Задание 9: Нахождение Пересечения Множеств
//    Создайте два множества целых чисел и найдите их пересечение (общие элементы). Реши задачу через вложенные циклы.
    val setNum=setOf(1,2,3,4,5)
    val setNumTwo=setOf(4,5,6,7,8)
    val mainSet = mutableSetOf<Int>()
    for (i in setNum){
        for (j in setNumTwo){
            if (i==j){
                mainSet.add(i)
            }
        }
    }
    println(mainSet)
//    Задание 10: Нахождение Разности Множеств
//    Создайте два множества строк и найдите разность первого множества относительно второго
//    (элементы, присутствующие в первом множестве, но отсутствующие во втором). Реши задачу через вложенные циклы и переменные флаги.
//    Задание 11: Конвертация Множества в Список
//    Создайте множество строк и конвертируйте его в список с использованием цикла.

}

fun searchResult(mySetString: Set<String>, myString: String):Boolean {
    var searchResult = ""
    for (i in mySetString) {
        if (i==myString)  return  true
    }
    return false
}